swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /api
paths:
  /v2/etcdv2/delete:
    delete:
      tags:
      - v2
      description: etcdv2 修改设置
      operationId: EtcdV2Controller.Delete
      parameters:
      - in: body
        name: key
        description: the objectid you want to get
        required: true
        schema:
          $ref: '#/definitions/models.Key'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: :key is empty
  /v2/etcdv2/get:
    post:
      tags:
      - v2
      description: etcdv2 查询
      operationId: EtcdV2Controller.Get
      parameters:
      - in: body
        name: key
        description: the objectid you want to get
        required: true
        schema:
          $ref: '#/definitions/models.Key'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: :key is empty
  /v2/etcdv2/set:
    put:
      tags:
      - v2
      description: etcdv2 修改设置
      operationId: EtcdV2Controller.Set
      parameters:
      - in: body
        name: key
        description: the objectid you want to get
        required: true
        schema:
          $ref: '#/definitions/models.Value'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: :key is empty
  /v2/etcdv2/setdir:
    put:
      tags:
      - v2
      description: etcdv2 修改设置
      operationId: EtcdV2Controller.Set
      parameters:
      - in: body
        name: key
        description: the objectid you want to get
        required: true
        schema:
          $ref: '#/definitions/models.Value'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: :key is empty
  /v3/etcdv3/delete:
    delete:
      tags:
      - v3
      description: etcdV3 修改设置
      operationId: EtcdV3Controller.Delete
      parameters:
      - in: body
        name: key
        description: the objectid you want to get
        required: true
        schema:
          $ref: '#/definitions/models.Key'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: :key is empty
  /v3/etcdv3/get:
    post:
      tags:
      - v3
      description: etcdV3 查询
      operationId: EtcdV3Controller.Get
      parameters:
      - in: body
        name: key
        description: the objectid you want to get
        required: true
        schema:
          $ref: '#/definitions/models.Key'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: :key is empty
  /v3/etcdv3/set:
    put:
      tags:
      - v3
      description: etcdV3 修改设置
      operationId: EtcdV3Controller.Set
      parameters:
      - in: body
        name: key
        description: the objectid you want to get
        required: true
        schema:
          $ref: '#/definitions/models.Value'
      responses:
        "200":
          description: '{string} success'
        "403":
          description: :key is empty
definitions:
  models.Key:
    title: Key
    type: object
    properties:
      key:
        type: string
      recursive:
        type: boolean
  models.Value:
    title: Value
    type: object
    properties:
      key:
        type: string
      ttl:
        type: integer
        format: int64
      value:
        type: string
